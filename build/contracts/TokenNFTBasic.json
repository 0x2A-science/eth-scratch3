{
  "contractName": "TokenNFTBasic",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/contracts/TokenNFTBasic.sol\":\"TokenNFTBasic\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/contracts/TokenNFTBasic.sol\":{\"keccak256\":\"0x6a7e3f00e2c5e38384e7c646ce0291ff470cf9790c99a6f1f82fdb2940a98692\",\"urls\":[\"bzzr://48f8036c83143915fbf29029e357a773721cebd5e23095bf79fb98db593683f5\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzzr://a5438906da44343a09c6b47666d3649f269d9d156f2109e147e21595b2284363\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd86c61f2e7e78c88716b5591bbf2d6cce8fe1a68320484994810d54f82605a7a\",\"urls\":[\"bzzr://4823f8b1263e0bacc50b5a823ebb27abeda34bffd67fa72225c44ebb2b4a30c7\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xc48ee580d20820cc0ef122b2acc9bf8836731dd8b9671cc03d21a12e3ab14976\",\"urls\":[\"bzzr://744cf3b8280d4a050ad0771e2ed0d7d41bbddfa40a541933d46bb31007a2e4a9\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x07029cbf047f6559e30862f33be2ee323c763e2fc251bca5de44177d29cf15e2\",\"urls\":[\"bzzr://bacac55aed34ace5358b0c89d0fdcd424e3b2d67e2deb51e238b54bd4903317f\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x44fd7c58fc1323f8481f160f2fd4c34b1653d0cc5def45c2381898d32bcc023e\",\"urls\":[\"bzzr://b7c59c72ede9ca492a5606cbbfaa4ba84e9869d9bdcdac2183655baae8b64026\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzzr://393e9843d41c0652f115378cc58083c4acc4d83f7999fe22932d5e237c215d3f\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]}},\"version\":1}",
  "bytecode": "0x60806040526100367f01ffc9a70000000000000000000000000000000000000000000000000000000064010000000061006d810204565b6100687f80ac58cd0000000000000000000000000000000000000000000000000000000064010000000061006d810204565b6100d9565b7fffffffff00000000000000000000000000000000000000000000000000000000808216141561009c57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b610984806100e86000396000f3fe608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480636352211e116100835780636352211e146101e357806370a0823114610200578063a22cb46514610238578063b88d4fde14610266578063e985e9c51461032c576100bb565b806301ffc9a7146100c0578063081812fc14610110578063095ea7b31461014957806323b872dd1461017757806342842e0e146101ad575b600080fd5b6100fc600480360360208110156100d657600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661035a565b604080519115158252519081900360200190f35b61012d6004803603602081101561012657600080fd5b503561038e565b60408051600160a060020a039092168252519081900360200190f35b6101756004803603604081101561015f57600080fd5b50600160a060020a0381351690602001356103be565b005b6101756004803603606081101561018d57600080fd5b50600160a060020a03813581169160208101359091169060400135610478565b610175600480360360608110156101c357600080fd5b50600160a060020a0381358116916020810135909116906040013561049b565b61012d600480360360208110156101f957600080fd5b50356104b6565b6102266004803603602081101561021657600080fd5b5035600160a060020a03166104de565b60408051918252519081900360200190f35b6101756004803603604081101561024e57600080fd5b50600160a060020a0381351690602001351515610514565b6101756004803603608081101561027c57600080fd5b600160a060020a038235811692602081013590911691604082013591908101906080810160608201356401000000008111156102b757600080fd5b8201836020820111156102c957600080fd5b803590602001918460018302840111640100000000831117156102eb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610598945050505050565b6100fc6004803603604081101561034257600080fd5b50600160a060020a03813581169160200135166105be565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b6000610399826105ec565b6103a257600080fd5b50600090815260026020526040902054600160a060020a031690565b60006103c9826104b6565b905080600160a060020a031683600160a060020a031614156103ea57600080fd5b33600160a060020a0382161480610406575061040681336105be565b61040f57600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6104823382610609565b61048b57600080fd5b610496838383610668565b505050565b61049683838360405180602001604052806000815250610598565b600081815260016020526040812054600160a060020a0316806104d857600080fd5b92915050565b6000600160a060020a0382166104f357600080fd5b600160a060020a03821660009081526003602052604090206104d890610755565b600160a060020a03821633141561052a57600080fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6105a3848484610478565b6105af84848484610759565b6105b857600080fd5b50505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b600080610615836104b6565b905080600160a060020a031684600160a060020a03161480610650575083600160a060020a03166106458461038e565b600160a060020a0316145b80610660575061066081856105be565b949350505050565b82600160a060020a031661067b826104b6565b600160a060020a03161461068e57600080fd5b600160a060020a0382166106a157600080fd5b6106aa816108d3565b600160a060020a03831660009081526003602052604090206106cb9061091d565b600160a060020a03821660009081526003602052604090206106ec90610934565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b5490565b600061076d84600160a060020a031661093d565b61077957506001610660565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b8381101561080c5781810151838201526020016107f4565b50505050905090810190601f1680156108395780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561085b57600080fd5b505af115801561086f573d6000803e3d6000fd5b505050506040513d602081101561088557600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b600081815260026020526040902054600160a060020a03161561091a576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b805461093090600163ffffffff61094316565b9055565b80546001019055565b3b151590565b60008282111561095257600080fd5b5090039056fea165627a7a7230582068ebdb8259bfec27556f02e179c7ede23d9bf0d352c440ae6dc7da363a2f59320029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480636352211e116100835780636352211e146101e357806370a0823114610200578063a22cb46514610238578063b88d4fde14610266578063e985e9c51461032c576100bb565b806301ffc9a7146100c0578063081812fc14610110578063095ea7b31461014957806323b872dd1461017757806342842e0e146101ad575b600080fd5b6100fc600480360360208110156100d657600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191661035a565b604080519115158252519081900360200190f35b61012d6004803603602081101561012657600080fd5b503561038e565b60408051600160a060020a039092168252519081900360200190f35b6101756004803603604081101561015f57600080fd5b50600160a060020a0381351690602001356103be565b005b6101756004803603606081101561018d57600080fd5b50600160a060020a03813581169160208101359091169060400135610478565b610175600480360360608110156101c357600080fd5b50600160a060020a0381358116916020810135909116906040013561049b565b61012d600480360360208110156101f957600080fd5b50356104b6565b6102266004803603602081101561021657600080fd5b5035600160a060020a03166104de565b60408051918252519081900360200190f35b6101756004803603604081101561024e57600080fd5b50600160a060020a0381351690602001351515610514565b6101756004803603608081101561027c57600080fd5b600160a060020a038235811692602081013590911691604082013591908101906080810160608201356401000000008111156102b757600080fd5b8201836020820111156102c957600080fd5b803590602001918460018302840111640100000000831117156102eb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610598945050505050565b6100fc6004803603604081101561034257600080fd5b50600160a060020a03813581169160200135166105be565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b6000610399826105ec565b6103a257600080fd5b50600090815260026020526040902054600160a060020a031690565b60006103c9826104b6565b905080600160a060020a031683600160a060020a031614156103ea57600080fd5b33600160a060020a0382161480610406575061040681336105be565b61040f57600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6104823382610609565b61048b57600080fd5b610496838383610668565b505050565b61049683838360405180602001604052806000815250610598565b600081815260016020526040812054600160a060020a0316806104d857600080fd5b92915050565b6000600160a060020a0382166104f357600080fd5b600160a060020a03821660009081526003602052604090206104d890610755565b600160a060020a03821633141561052a57600080fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6105a3848484610478565b6105af84848484610759565b6105b857600080fd5b50505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b600080610615836104b6565b905080600160a060020a031684600160a060020a03161480610650575083600160a060020a03166106458461038e565b600160a060020a0316145b80610660575061066081856105be565b949350505050565b82600160a060020a031661067b826104b6565b600160a060020a03161461068e57600080fd5b600160a060020a0382166106a157600080fd5b6106aa816108d3565b600160a060020a03831660009081526003602052604090206106cb9061091d565b600160a060020a03821660009081526003602052604090206106ec90610934565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b5490565b600061076d84600160a060020a031661093d565b61077957506001610660565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b8381101561080c5781810151838201526020016107f4565b50505050905090810190601f1680156108395780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561085b57600080fd5b505af115801561086f573d6000803e3d6000fd5b505050506040513d602081101561088557600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b600081815260026020526040902054600160a060020a03161561091a576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b805461093090600163ffffffff61094316565b9055565b80546001019055565b3b151590565b60008282111561095257600080fd5b5090039056fea165627a7a7230582068ebdb8259bfec27556f02e179c7ede23d9bf0d352c440ae6dc7da363a2f59320029",
  "sourceMap": "108:36:3:-;;;639:40:7;658:20;639:18;;;;:40;:::i;:::-;1970::15;1989:20;1970:18;;;;:40;:::i;:::-;108:36:3;;989:158:7;1064:25;;;;;;1056:34;;;;;;1100:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1100:40:7;1136:4;1100:40;;;989:158::o;108:36:3:-;;;;;;;",
  "deployedSourceMap": "108:36:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;108:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;777:133:7;-1:-1:-1;;777:133:7;;:::i;:::-;;;;;;;;;;;;;;;;;;3773:151:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3773:151:15;;:::i;:::-;;;;-1:-1:-1;;;;;3773:151:15;;;;;;;;;;;;;;3196:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3196:292:15;;;;;;;;:::i;:::-;;5329:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5329:180:15;;;;;;;;;;;;;;;;;:::i;6142:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6142:132:15;;;;;;;;;;;;;;;;;:::i;2598:177::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2598:177:15;;:::i;2220:160::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2220:160:15;-1:-1:-1;;;;;2220:160:15;;:::i;:::-;;;;;;;;;;;;;;;;4216:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4216:213:15;;;;;;;;;;:::i;6979:211::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6979:211:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6979:211:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6979:211:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6979:211:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6979:211:15;;-1:-1:-1;6979:211:15;;-1:-1:-1;;;;;6979:211:15:i;4750:145::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4750:145:15;;;;;;;;;;:::i;777:133:7:-;-1:-1:-1;;870:33:7;847:4;870:33;;;;;;;;;;;;;;777:133::o;3773:151:15:-;3832:7;3859:16;3867:7;3859;:16::i;:::-;3851:25;;;;;;-1:-1:-1;3893:24:15;;;;:15;:24;;;;;;-1:-1:-1;;;;;3893:24:15;;3773:151::o;3196:292::-;3259:13;3275:16;3283:7;3275;:16::i;:::-;3259:32;;3315:5;-1:-1:-1;;;;;3309:11:15;:2;-1:-1:-1;;;;;3309:11:15;;;3301:20;;;;;;3339:10;-1:-1:-1;;;;;3339:19:15;;;;:58;;;3362:35;3379:5;3386:10;3362:16;:35::i;:::-;3331:67;;;;;;3409:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3409:29:15;-1:-1:-1;;;;;3409:29:15;;;;;;;;;3453:28;;3409:24;;3453:28;;;;;;;3196:292;;;:::o;5329:180::-;5419:39;5438:10;5450:7;5419:18;:39::i;:::-;5411:48;;;;;;5470:32;5484:4;5490:2;5494:7;5470:13;:32::i;:::-;5329:180;;;:::o;6142:132::-;6228:39;6245:4;6251:2;6255:7;6228:39;;;;;;;;;;;;:16;:39::i;2598:177::-;2653:7;2688:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2688:20:15;2726:19;2718:28;;;;;;2763:5;2598:177;-1:-1:-1;;2598:177:15:o;2220:160::-;2275:7;-1:-1:-1;;;;;2302:19:15;;2294:28;;;;;;-1:-1:-1;;;;;2339:24:15;;;;;;:17;:24;;;;;:34;;:32;:34::i;4216:213::-;-1:-1:-1;;;;;4295:16:15;;4301:10;4295:16;;4287:25;;;;;;4341:10;4322:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4322:34:15;;;;;;;;;;;;:45;;-1:-1:-1;;4322:45:15;;;;;;;;;;4382:40;;;;;;;4322:34;;4341:10;4382:40;;;;;;;;;;;4216:213;;:::o;6979:211::-;7085:31;7098:4;7104:2;7108:7;7085:12;:31::i;:::-;7134:48;7157:4;7163:2;7167:7;7176:5;7134:22;:48::i;:::-;7126:57;;;;;;6979:211;;;;:::o;4750:145::-;-1:-1:-1;;;;;4853:25:15;;;4830:4;4853:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4750:145::o;7384:152::-;7441:4;7473:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7473:20:15;7510:19;;;7384:152::o;7896:246::-;7981:4;7997:13;8013:16;8021:7;8013;:16::i;:::-;7997:32;;8058:5;-1:-1:-1;;;;;8047:16:15;:7;-1:-1:-1;;;;;8047:16:15;;:51;;;;8091:7;-1:-1:-1;;;;;8067:31:15;:20;8079:7;8067:11;:20::i;:::-;-1:-1:-1;;;;;8067:31:15;;8047:51;:87;;;;8102:32;8119:5;8126:7;8102:16;:32::i;:::-;8039:96;7896:246;-1:-1:-1;;;;7896:246:15:o;9844:362::-;9957:4;-1:-1:-1;;;;;9937:24:15;:16;9945:7;9937;:16::i;:::-;-1:-1:-1;;;;;9937:24:15;;9929:33;;;;;;-1:-1:-1;;;;;9980:16:15;;9972:25;;;;;;10008:23;10023:7;10008:14;:23::i;:::-;-1:-1:-1;;;;;10042:23:15;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;10087:21:15;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10131:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;10131:25:15;-1:-1:-1;;;;;10131:25:15;;;;;;;;;10172:27;;10131:20;;10172:27;;;;;;;9844:362;;;:::o;1062:112:6:-;1153:14;;1062:112::o;10734:347:15:-;10855:4;10880:15;:2;-1:-1:-1;;;;;10880:13:15;;:15::i;:::-;10875:58;;-1:-1:-1;10918:4:15;10911:11;;10875:58;10959:70;;;;;10996:10;10959:70;;;;;;-1:-1:-1;;;;;10959:70:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;10943:13;;10959:36;;;;;;10996:10;;11008:4;;11014:7;;11023:5;;10959:70;;;;;;;;;;;10943:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10959:70:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10959:70:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10959:70:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10959:70:15;-1:-1:-1;;11047:26:15;11057:16;11047:26;;-1:-1:-1;;10734:347:15;;;;;;:::o;11242:171::-;11341:1;11305:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11305:24:15;:38;11301:106;;11394:1;11359:24;;;:15;:24;;;;;:37;;-1:-1:-1;;11359:37:15;;;11301:106;11242:171;:::o;1275:108:6:-;1355:14;;:21;;1374:1;1355:21;:18;:21;:::i;:::-;1338:38;;1275:108::o;1180:89::-;1243:19;;1261:1;1243:19;;;1180:89::o;463:616:18:-;1026:20;1064:8;;;463:616::o;1211:145:9:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:9;;;1211:145::o",
  "source": "pragma solidity ^0.5.8;\n\nimport \"../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\ncontract TokenNFTBasic is ERC721 {\n}\n",
  "sourcePath": "/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/contracts/TokenNFTBasic.sol",
  "ast": {
    "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/contracts/TokenNFTBasic.sol",
    "exportedSymbols": {
      "TokenNFTBasic": [
        107
      ]
    },
    "id": 108,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 103,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 104,
        "nodeType": "ImportDirective",
        "scope": 108,
        "sourceUnit": 1657,
        "src": "25:81:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 105,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1656,
              "src": "134:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1656",
                "typeString": "contract ERC721"
              }
            },
            "id": 106,
            "nodeType": "InheritanceSpecifier",
            "src": "134:6:3"
          }
        ],
        "contractDependencies": [
          404,
          414,
          1656,
          1759
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 107,
        "linearizedBaseContracts": [
          107,
          1656,
          1759,
          404,
          414
        ],
        "name": "TokenNFTBasic",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 108,
        "src": "108:36:3"
      }
    ],
    "src": "0:145:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/contracts/TokenNFTBasic.sol",
    "exportedSymbols": {
      "TokenNFTBasic": [
        107
      ]
    },
    "id": 108,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 103,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/eth-scratch3/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 104,
        "nodeType": "ImportDirective",
        "scope": 108,
        "sourceUnit": 1657,
        "src": "25:81:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 105,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1656,
              "src": "134:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1656",
                "typeString": "contract ERC721"
              }
            },
            "id": 106,
            "nodeType": "InheritanceSpecifier",
            "src": "134:6:3"
          }
        ],
        "contractDependencies": [
          404,
          414,
          1656,
          1759
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 107,
        "linearizedBaseContracts": [
          107,
          1656,
          1759,
          404,
          414
        ],
        "name": "TokenNFTBasic",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 108,
        "src": "108:36:3"
      }
    ],
    "src": "0:145:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x30110778A160C6C4f0Ff7D923B7F393663AD5aF5",
      "transactionHash": "0xa4791f299a91dcd50f10846630fa8b9deef9f9a9f7e26b088fd9c3819fb41044"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-05-11T11:39:46.798Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}